<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?fileVersion 4.0.0?>

<cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
	<storageModule moduleId="org.eclipse.cdt.core.settings">
		<cconfiguration id="com.nvidia.cuda.ide.configuration.debug.1540842286">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.ide.configuration.debug.1540842286" moduleId="org.eclipse.cdt.core.settings" name="Debug">
				<externalSettings/>
				<extensions>
					<extension id="com.nvidia.cuda.ide.cubin" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.elf" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.macho" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="nvcc.errorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.VCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug,org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe" cleanCommand="rm -rf" description="" id="com.nvidia.cuda.ide.configuration.debug.1540842286" name="Debug" parent="com.nvidia.cuda.ide.configuration.debug">
					<folderInfo id="com.nvidia.cuda.ide.configuration.debug.1540842286." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.tools.toolchain.exe.debug.930344535" name="CUDA Toolkit 5.0" superClass="com.nvidia.cuda.tools.toolchain.exe.debug">
							<targetPlatform archList="all" binaryParser="com.nvidia.cuda.ide.elf;com.nvidia.cuda.ide.macho;com.nvidia.cuda.ide.cubin" id="com.nvidia.cuda.ide.targetPlatform.259299179" isAbstract="false" name="Debug Platform" osList="linux,macosx" superClass="com.nvidia.cuda.ide.targetPlatform"/>
							<builder buildPath="${workspace_loc:/Remote_MPI/Debug}" id="com.nvidia.cuda.ide.builder.1757112502" managedBuildOn="true" name="Gnu Make Builder.Debug" superClass="com.nvidia.cuda.ide.builder"/>
							<tool id="nvcc.compiler.base.187954346" name="NVCC Compiler" superClass="nvcc.compiler.base">
								<option id="nvcc.compiler.deviceDebug.1353011295" superClass="nvcc.compiler.deviceDebug" value="true" valueType="boolean"/>
								<option id="nvcc.compiler.option.level.705222896" superClass="nvcc.compiler.option.level" value="true" valueType="boolean"/>
								<option defaultValue="nvcc.compiler.optimization.level.none" id="nvcc.compiler.optimization.level.1817344578" superClass="nvcc.compiler.optimization.level" valueType="enumerated"/>
								<option id="nvcc.compiler.pic.1126394715" superClass="nvcc.compiler.pic"/>
								<inputType id="nvcc.compiler.input.cu.1938135574" superClass="nvcc.compiler.input.cu"/>
								<inputType id="nvcc.compiler.input.cpp.846205291" superClass="nvcc.compiler.input.cpp"/>
								<inputType id="nvcc.compiler.input.c.858207324" superClass="nvcc.compiler.input.c"/>
							</tool>
							<tool id="nvcc.linker.base.231833485" name="NVCC Linker" superClass="nvcc.linker.base">
								<inputType id="nvcc.linker.input.1040056664" superClass="nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.base.747625071" name="NVCC Archiver" superClass="nvcc.archiver.base"/>
							<tool id="com.nvidia.host.assembler.1819213701" name="Host Assembler" superClass="com.nvidia.host.assembler">
								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.1885069821" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
							</tool>
						</toolChain>
					</folderInfo>
				</configuration>
			</storageModule>
			<storageModule moduleId="com.nvidia.cuda.ide.build.project.ICudaProjectConfiguration"/>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
		<cconfiguration id="com.nvidia.cuda.ide.configuration.release.812146880">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.ide.configuration.release.812146880" moduleId="org.eclipse.cdt.core.settings" name="Release">
				<externalSettings/>
				<extensions>
					<extension id="com.nvidia.cuda.ide.cubin" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.elf" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.macho" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="nvcc.errorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.VCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release,org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe" cleanCommand="rm -rf" description="" id="com.nvidia.cuda.ide.configuration.release.812146880" name="Release" parent="com.nvidia.cuda.ide.configuration.release">
					<folderInfo id="com.nvidia.cuda.ide.configuration.release.812146880." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.ide.toolchain.exe.release.1571979736" name="CUDA Toolkit 5.0" superClass="com.nvidia.cuda.ide.toolchain.exe.release">
							<targetPlatform archList="all" binaryParser="com.nvidia.cuda.ide.elf;com.nvidia.cuda.ide.macho;com.nvidia.cuda.ide.cubin" id="com.nvidia.cuda.ide.targetPlatform.1032424403" isAbstract="false" name="Debug Platform" osList="linux,macosx" superClass="com.nvidia.cuda.ide.targetPlatform"/>
							<builder buildPath="${workspace_loc:/Remote_MPI/Release}" id="com.nvidia.cuda.ide.builder.871306175" managedBuildOn="true" name="Gnu Make Builder.Release" superClass="com.nvidia.cuda.ide.builder"/>
							<tool id="nvcc.compiler.base.1768374539" name="NVCC Compiler" superClass="nvcc.compiler.base">
								<option id="nvcc.compiler.deviceDebug.878265482" superClass="nvcc.compiler.deviceDebug"/>
								<option id="nvcc.compiler.option.level.83172446" superClass="nvcc.compiler.option.level"/>
								<option defaultValue="nvcc.compiler.optimization.level.most" id="nvcc.compiler.optimization.level.148056214" superClass="nvcc.compiler.optimization.level" valueType="enumerated"/>
								<option id="nvcc.compiler.pic.297487220" superClass="nvcc.compiler.pic"/>
							</tool>
							<tool id="nvcc.linker.base.266712427" name="NVCC Linker" superClass="nvcc.linker.base"/>
							<tool id="nvcc.archiver.base.1672195506" name="NVCC Archiver" superClass="nvcc.archiver.base"/>
							<tool id="com.nvidia.host.assembler.1580312054" name="Host Assembler" superClass="com.nvidia.host.assembler"/>
						</toolChain>
					</folderInfo>
				</configuration>
			</storageModule>
		</cconfiguration>
	</storageModule>
	<storageModule moduleId="cdtBuildSystem" version="4.0.0">
		<project id="Remote_MPI.com.nvidia.cuda.ide.exe.330814841" name="Executable" projectType="com.nvidia.cuda.ide.exe"/>
	</storageModule>
	<storageModule moduleId="scannerConfiguration">
		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.configuration.debug.1540842286;com.nvidia.cuda.ide.configuration.debug.1540842286.;nvcc.compiler.base.187954346;nvcc.compiler.input.c.858207324">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.configuration.debug.1540842286;com.nvidia.cuda.ide.configuration.debug.1540842286.;nvcc.compiler.base.187954346;nvcc.compiler.input.cu.1938135574">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.configuration.debug.1540842286;com.nvidia.cuda.ide.configuration.debug.1540842286.;nvcc.compiler.base.187954346;nvcc.compiler.input.cpp.846205291">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
	</storageModule>
</cproject>
